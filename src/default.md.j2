{#- ------------------------------------------------------------------------------------ -#}
{#-  VARIABLES                                                                           -#}
{#- ------------------------------------------------------------------------------------ -#}
{%- set dc = ctx|to_context_obj -%}
{#- ------------------------------------------------------------------------------------ -#}
{#-  TAGS, REFERENCES, and EXPERTS MACROS                                                 -#}
{#- ------------------------------------------------------------------------------------ -#}
{%- macro renderTags(question) -%}
{%- if question.tags|length > 0 %}
* 🏷️ **Tags:** {% for tag in question.tags %}*{{tag.name}}*{% if not loop.last %}, {% endif %}{% endfor %}
{%- endif %}
{%- endmacro -%}
{%- macro renderResourcePageReferences(question) -%}
{% set refs = question.resource_page_references %}
{% if refs|length > 0 %}
* 📖 **Data Stewardship for Open Science:** {% for reference in refs %}[{{reference.short_uuid}}]({{reference.url}}){% if not loop.last %}, {% endif %}{% endfor %}
{%- endif -%}
{%- endmacro -%}
{%- macro renderURLReferences(question) -%}
{% set refs = question.url_references %}
{% if refs|length > 0 %}
* 🔗 **External links**: {% for reference in refs %}[{{reference.label}}]({{reference.url}}){% if not loop.last %}, {% endif %}{% endfor %}
{%- endif -%}
{%- endmacro -%}
{%- macro renderExperts(question) -%}
{% if question.experts|length > 0 %}
* 🙋 **Experts:** {% for expert in question.experts %}*{{expert.name}}* <{{expert.email}}>{% if not loop.last %}, {% endif %}{% endfor %}
{%- endif -%}
{%- endmacro -%}
{#- ------------------------------------------------------------------------------------ -#}
{#-  ANSWERS MACROS                                                                      -#}
{#- ------------------------------------------------------------------------------------ -#}
{%- macro renderAnswerValue(question, reply, path, humanIdentifier) -%}
✔️ {{reply.value}}
{%- if reply.is_integration %}{% set integration = question.integration -%}
 ({{integration.name}}: [{{reply.item_id}}]({{integration.item(reply.item_id)}}})){%- endif -%}
{%- endmacro -%}
{%- macro renderAnswerOption(question, reply, path, humanIdentifier) -%}
{% set hi = question.answers.index(reply.answer) %}
{%- set answer = reply.answer -%}
{%- set path = path ~ "." ~ answer.uuid -%}
{%- set humanIdentifier = humanIdentifier ~ "." ~ hi|of_alphabet -%}
✔️ {{ hi|of_alphabet }}. {{answer.label}}
{% if answer.advice -%}
💡 {{answer.advice}}
{%- endif -%}
{%- if answer.followups|length > 0 -%}
{%- set hiPrefix = humanIdentifier ~ "." -%}
{%- for question in answer.followups -%}
{%- set x = loop.index -%}
{{ renderQuestion(question, path, hiPrefix ~ x) }}
{%- endfor -%}
{%- endif -%}
{%- endmacro -%}
{%- macro renderAnswerList(question, reply, path, humanIdentifier) -%}
{%- set itemPathPrefix = path ~ "." -%}
{%- set hiPrefix = humanIdentifier ~ "." -%}
{%- for i in reply.items -%}
{%- set itemPath = itemPathPrefix ~ i -%}
{%- set itemHumanIdenfifier = hiPrefix ~ (loop.index - 1)|of_alphabet -%}
{%- for question in question.followups -%}
{%- set x = loop.index -%}
{{ renderQuestion(question, itemPath, itemHumanIdenfifier ~ "." ~ x) }}
{%- else -%}
*No follow up questions*
{%- endfor -%}
{%- else %}
*No answer items*
{%- endfor -%}
{%- endmacro -%}
{%- macro renderChoiceList(question, reply, path, humanIdentifier) -%}
{%- for choice in question.choices -%}
{%- if choice in reply.choices %}
* ✔️ {{ choice.label }}
{%- else %}
* ❌ {{ choice.label }}
{%- endif %}
{%- endfor -%}
{%- endmacro -%}
{#- ------------------------------------------------------------------------------------ -#}
{#-  QUESTION MACROS                                                                     -#}
{#- ------------------------------------------------------------------------------------ -#}
{%- macro renderQuestionExtras(question) -%}
{{- renderResourcePageReferences(question) -}}
{{- renderURLReferences(question) -}}
{{- renderExperts(question) -}}
{%- endmacro -%}
{%- macro renderQuestionReply(question, path, humanIdentifier) -%}
{%- set reply = question.replies.get(path) -%}
{%- if reply and reply.value -%}
{%- if question is of_type("ValueQuestion") and reply is of_type("StringReply") -%}
{{ renderAnswerValue(question, reply, path, humanIdentifier) }}
{%- elif question is of_type("OptionsQuestion") and reply is of_type("AnswerReply") -%}
{{ renderAnswerOption(question, reply, path, humanIdentifier) }}
{%- elif question is of_type("ListQuestion") and reply is of_type("ItemListReply") -%}
{{ renderAnswerList(question, reply, path, humanIdentifier) }}
{%- elif question is of_type("IntegrationQuestion") and reply is of_type("IntegrationReply") -%}
{{ renderAnswerValue(question, reply, path, humanIdentifier) }}
{%- elif question is of_type("MultiChoiceQuestion") and reply is of_type("MultiChoiceReply") -%}
{{ renderChoiceList(question, reply, path, humanIdentifier) }}
{%- endif -%}
{%- else %}
❗ *This question has not been answered yet!*
{%- endif -%}
{%- endmacro -%}
{%- macro renderQuestion(question, path, humanIdentifier) -%}
{%- set path = path ~ "." ~ question.uuid %}
#### {{humanIdentifier}} {{question.title}}
      {#- we don't want the tags  -#}
{#-   {{- renderTags(question) -}}-#}
{#-  nor question extras  -#}
{#-   {{- renderQuestionExtras(question) -}}-#}
{#- we don't want the accompanying text -#}
{#-   {%- if question.text %}-#}
{#-   > {{ question.text.replace("\n", "\n> ") }}-#}
  {#-   {%- endif %}-#}
  
{{ renderQuestionReply(question, path, humanIdentifier) }}
{%- endmacro -%}
{#- ------------------------------------------------------------------------------------ -#}
{#-  CHAPTER MACROS                                                                      -#}
{#- ------------------------------------------------------------------------------------ -#}
{%- macro renderReport(report) -%}
{%- if report.indications|length > 0 %}
### Summary

{% for item in report.indications -%}
* Answered{% if item.is_for_phase %} (current phase){% endif %}: **{{item.answered}} / {{item.total}}** ({{"%.2f"|format(item.percentage)}} %)
{% endfor %}
{% endif -%}
{%- if report.metrics|length > 0 %}

### Metrics
{% for item in report.metrics %}
* {{item.metric.title}}: {{ "%.2f"|format(item.measure) }}
{%- endfor %}
{% endif -%}
{%- endmacro -%}
{%- macro renderChapter(chapter, humanIdentifier) -%}
## {{humanIdentifier|roman}}. {{chapter.title}}

{%- if chapter.text %}
> {{chapter.text.replace("\n", "\n> ")}}
{% endif -%}

{% for chapterReport in chapter.reports %}
{{ renderReport(chapterReport) }}
{% endfor %}

### Questions

{% for question in chapter.questions %}
{{ renderQuestion(question, chapter.uuid, loop.index) }}
{%- else %}
*No questions*
{%- endfor %}
{%- endmacro -%}
{#- ------------------------------------------------------------------------------------ -#}
{#-  INTRODUCTION                                                                        -#}
{#- ------------------------------------------------------------------------------------ -#}
# {{ dc.qtn.name }}

* Organization: **{{ dc.org.name }}**
{%- if dc.qtn.created_by %}
* Created by: **{{ dc.qtn.created_by.first_name }} {{ dc.qtn.created_by.last_name }}** <{{ dc.qtn.created_by.email }}>
{%- endif %}
* Based on: **{{ dc.pkg.name }}, {{ dc.pkg.version }}** (`{{ dc.pkg.org_id }}:{{ dc.pkg.km_id }}:{{ dc.pkg.version }}`)
{%- for version in dc.qtn.versions if version.uuid == dc.qtn.version %}
* Version: **{{ version.name }}** ({{ version.created_at|datetime_format("%d %b %Y %H:%M:%S") }} UTC)
{%- endfor %}
{%- if dc.current_phase %}
* Project phase: **{{ dc.current_phase.title }}**
{%- endif %}
{%- if dc.qtn.project_tags|length > 0 %}
* Project tags: {% for tag in dc.qtn.project_tags %}**{{ tag }}**{% if not loop.last %}, {% endif %}{% endfor %}
{%- endif %}
{%- if dc.qtn.description %}
* Description: **{{ dc.qtn.description }}**
{%- endif %}
* Created at: **{{ dc.doc.created_at|datetime_format("%d %b %Y") }}**

## Report

{{ renderReport(dc.report.total_report) }}

{% if dc.qtn.versions|length > 0 %}
## History of Versions

The named versions of this document:

{%- for version in dc.qtn.versions|reverse %}
* **{{ version.name }}** ({{ version.created_at|datetime_format("%d %b %Y") }}): {{ version.description }}
{%- endfor %}
{%- endif %}

---

{% for chapter in dc.km.chapters %}
{{ renderChapter(chapter, loop.index) }}
{% else %}
*No chapters*
{% endfor %}
